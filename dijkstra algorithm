class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S){
         priority_queue<pair<int,int>, vector<pair<int,int>>,greater<pair<int,int>>>pq;
     //distance vector
    vector<int>dist(V,INT_MAX);
    //pushing the  distancs from source and nodes
    pq.push({0,S});
    dist[S]=0;
    //using bfs
    while(!pq.empty()){
        int node=pq.top().second;
        int dis=pq.top().first;
        pq.pop();
        for(auto i:adj[node]){
            int nextnode=i[0];
            int edgeweight=i[1];
            if(edgeweight+dis<dist[nextnode]){
                dist[nextnode]=dis+edgeweight;
                pq.push({dist[nextnode],nextnode});
                
            }
            
            }
            }
            return dist;
        }
};
